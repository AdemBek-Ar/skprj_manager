#!/bin/bash
SK_PRJ_NAME="nonamed_prj"
SK_PRJ_TYPE="app"

if [[ $1 == "--help" ]];then
	printf "\e[1;30mhave to run this script with \e[1;33msource\e[1;30m to export the Variables\e[0m\n"
	printf "\e[7mUse For:\e[0m\n\tcreating the project and Generate Files from prj-type(template)\n"
	printf "\e[7mThe How to Using:\e[0m\n\tskprj <new> [arguments]\n"
	printf "\t\t    [\e[1;32m-n\e[0m:SK_PRJ_NAME] [\e[1;32m-t\e[0m:SK_PRJ_TYPE]\n"
	printf "\e[7mArgs:\e[0m\n"
	printf "\t1|-n)\e[1;32mSK_PRJ_NAME\e[0m: the project name \e[1;30m:to control the project form workspace path\e[0m\n"
	printf "\t2|-t)\e[1;32mSK_PRJ_TYPE\e[0m: the project type \e[1;30m:project templates in 'skprjm/res/templates/prj-type'\e[0m\n"
	printf "\nThis Args can select by tags: \e[1;32m-n:for name\e[0m, \e[1;32m-t:for type\e[0m\n"
	return 5
fi

while [[ $# -gt 0 ]]; do
    arg="$1"
    case "$arg" in
        -n*|--name*)
            if [[ "$arg" == "-n" || "$arg" == "--name" ]]; then
                shift
                SK_PRJ_NAME="$1"
            else
                SK_PRJ_NAME="${arg#-n|--name}"
            fi
            ;;
        -t*|--type*)
            if [[ "$arg" == "-t" || "$arg" == "--type" ]]; then
                shift
                SK_PRJ_TYPE="$1"
            else
                SK_PRJ_TYPE="${arg#-t|--type}"
            fi
            ;;
        *)
            if [[ $SK_PRJ_NAME == "nonamed_prj" || -z $SK_PRJ_NAME ]]; then
                SK_PRJ_NAME="$arg"
            else
                echo "Unexpected argument: $arg"
                exit 1
            fi
            ;;
    esac
    shift
done

if [[ ! -d "$SK_PRJ_MANAGER/res/templates/prj-type/$SK_PRJ_TYPE" ]];then
	printf "\e[1;31mError\e[0m: Unknown project type\n\tThere is no Type or Template call \"$SK_PRJ_TYPE\"\n"
	echo "there is only:"
	bash "$SK_PRJ_MANAGER/res/print_prj-type_info"
else
	export SK_PRJ_TYPE SK_PRJ_NAME
	bash $SK_PRJ_MANAGER/res/new
fi

