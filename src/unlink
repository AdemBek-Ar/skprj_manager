#!/bin/bash
if [[ $1 == "--help" ]];then
	printf "\e[7mUse For:\e[0m\n\tunlink a (directory, include-path or a library) with the project and Delete build-Files for\n\tand delete there data in \e[1;35m'.dbg/prj.info'\e[0m\n"
	printf "\e[7mThe How to Using:\e[0m\n\tskprj <-ulk> [arguments]\n"
	printf "\t\t    [\e[1;32m-f\e[0m:F_name] [\e[1;32m-l\e[0m:L_name] [\e[1;32m-i\e[0m:I_name]\n"
	printf "\e[7mArgs:\e[0m\n"
	printf "\t-f)\e[1;32mF_name\e[0m: linked source folder \e[1;30m:well generate a folder in '.dbg' include build-files\e[0m\n"
	printf "\t-l)\e[1;32mL_name\e[0m: using a library that in \e[1;35m'/usr/lib(64)'\e[0m directory \e[1;30m:well add -l\"library\" to compile command\e[0m\n"
	printf "\t-i)\e[1;32mI_name\e[0m: add include folder \e[1;30m:well add -I\"Folder\" to compile command\e[0m\n"
	printf "\nThis Args can select by tags: \e[1;32m-f:for folder\e[0m, \e[1;32m-l:for static-library\e[0m, \e[1;32m-i:for include\e[0m\n"
	printf "This program just edit the \e[1;35m'.dbg/prj.info'\e[0m file \e[1;33m\n\tif you face any problem edit is manually\e[0m\n"
	return 5
fi

linked_includes=$(grep "^includes:" "$SK_PRJ_NAME/.dbg/prj.info" | cut -d':' -f2-)
linked_folders=$(grep "^folders:"  "$SK_PRJ_NAME/.dbg/prj.info" | cut -d':' -f2-)
linked_lib=$(grep "^lib:"      "$SK_PRJ_NAME/.dbg/prj.info" | cut -d':' -f2-)

process_include() {
	if [[ $linked_includes == *" -I$I_name "* ]];then
		linked_includes="${linked_includes//" -I$I_name "/ }"
	elif [[ $linked_includes == *" -I\"$I_name\" "* ]];then
		linked_includes="${linked_includes//" -I\"$I_name\" "/ }"
	elif [[ $linked_includes == *" -I'$I_name' "* ]];then
		linked_includes="${linked_includes//" -I'$I_name' "/ }"
	else
		printf "\e[1;33mWarning\e[0m: this path is not included \n"
	fi
}
process_folder() {
	if [[ $linked_folders == *" $F_name "* ]];then
		linked_folders="${linked_folders//" $F_name "/ }"
	elif [[ $linked_folders == *" \"$F_name\" "* ]];then
		linked_folders="${linked_folders//" \"$F_name\" "/ }"
	elif [[ $linked_folders == *" '$F_name' "* ]];then
		linked_folders="${linked_folders//" '$F_name' "/ }"
	else
		printf "\e[1;33mWarning\e[0m: this folder is not linked \n"
	fi
}
process_lib() {
	if [[ $linked_lib == *" -l$L_name "* ]];then
		linked_lib="${linked_lib//" -l$L_name "/ }"
	elif [[ $linked_lib == *" -l\"$L_name\" "* ]];then
		linked_lib="${linked_lib//" -l\"$L_name\" "/ }"
	elif [[ $linked_lib == *" -l'$L_name' "* ]];then
		linked_lib="${linked_lib//" -l'$L_name' "/ }"
	else
		printf "\e[1;33mWarning\e[0m: this path is not included \n"
	fi
}

while [[ $# -gt 0 ]]; do
    arg="$1"
    case "$arg" in
        -f|--folder)
            shift
            F_name="$1"
            process_folder
            ;;
        -f=*|--folder=*)
            F_name="${arg#*=}"
            process_folder
            ;;
        -l|--lib|--library)
            shift
            L_name="$1"
            process_lib
            ;;
        -l=*|--lib=*|--library=*)
            L_name="${arg#*=}"
            process_lib
            ;;
        -i|--include)
            shift
            I_name="$1"
            process_include
            ;;
        -i=*|--include=*)
            I_name="${arg#*=}"
            process_include
            ;;
        -*)
            printf "\e[1;31mError\e[0m: Unknown option: $arg\n"
            printf "select once of: \n\t-i\e[1;33m|\e[0m--include\n\t-l\e[1;33m|\e[0m--lib\e[1;33m|\e[0m--library\n\t-f\e[1;33m|\e[0m--folder\n"
            exit 1
            ;;
    esac
    shift
done

echo "lib:$linked_lib
includes:$linked_includes
folders:$linked_folders" > $SK_PRJ_NAME/.dbg/prj.info
